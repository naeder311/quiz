{"ast":null,"code":"var _jsxFileName = \"/Users/christophernaeder/Desktop/Github Repos/quiz/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGlobalContext } from './context';\nimport SetupForm from './SetupForm';\nimport Loading from './Loading';\nimport Modal from './Modal';\nfunction App() {\n  _s();\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer\n  } = useGlobalContext();\n  if (waiting) {\n    return /*#__PURE__*/React.createElement(SetupForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n  const {\n    question,\n    incorrect_answers,\n    correct_answer\n  } = questions[index];\n  console.log(questions);\n  // const answers = [...incorrect_answers, correct_answer];\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"correct-answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"correct answers : \", correct, \"/\", index), /*#__PURE__*/React.createElement(\"article\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, answers.map((answer, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"answer-btn\",\n      onClick: () => checkAnswer(correct_answer === answer),\n      dangerouslySetInnerHTML: {\n        __html: answer\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next-question\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"next question\")));\n}\n_s(App, \"noYkX6TVLqfmJ6sE/3zIqAKxzWw=\", false, function () {\n  return [useGlobalContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useGlobalContext","SetupForm","Loading","Modal","App","waiting","loading","questions","index","correct","nextQuestion","checkAnswer","question","incorrect_answers","correct_answer","console","log","answers","tempIndex","Math","floor","random","push","__html","map","answer"],"sources":["/Users/christophernaeder/Desktop/Github Repos/quiz/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useGlobalContext } from './context';\n\nimport SetupForm from './SetupForm';\nimport Loading from './Loading';\nimport Modal from './Modal';\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n  const { question, incorrect_answers, correct_answer } = questions[index];\n  console.log(questions);\n  // const answers = [...incorrect_answers, correct_answer];\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers : {correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className=\"btn-container\">\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => checkAnswer(correct_answer === answer)}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                />\n              );\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,WAAW;AAE5C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM;IACJC,OAAO;IACPC,OAAO;IACPC,SAAS;IACTC,KAAK;IACLC,OAAO;IACPC,YAAY;IACZC;EACF,CAAC,GAAGX,gBAAgB,EAAE;EAEtB,IAAIK,OAAO,EAAE;IACX,oBAAO,oBAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACtB;EACA,IAAIC,OAAO,EAAE;IACX,oBAAO,oBAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACpB;EACA,MAAM;IAAEM,QAAQ;IAAEC,iBAAiB;IAAEC;EAAe,CAAC,GAAGP,SAAS,CAACC,KAAK,CAAC;EACxEO,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;EACtB;EACA,IAAIU,OAAO,GAAG,CAAC,GAAGJ,iBAAiB,CAAC;EACpC,MAAMK,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;EAC/C,IAAIH,SAAS,KAAK,CAAC,EAAE;IACnBD,OAAO,CAACK,IAAI,CAACR,cAAc,CAAC;EAC9B,CAAC,MAAM;IACLG,OAAO,CAACK,IAAI,CAACL,OAAO,CAACC,SAAS,CAAC,CAAC;IAChCD,OAAO,CAACC,SAAS,CAAC,GAAGJ,cAAc;EACrC;EACA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACT;IAAS,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB;IAAG,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBACTL,OAAO,OAAGD,KAAK,CAChC,eACJ;IAAS,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B;IAAI,uBAAuB,EAAE;MAAEe,MAAM,EAAEX;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACrD;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3BK,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEjB,KAAK,KAAK;IAC9B,oBACE;MACE,GAAG,EAAEA,KAAM;MACX,SAAS,EAAC,YAAY;MACtB,OAAO,EAAE,MAAMG,WAAW,CAACG,cAAc,KAAKW,MAAM,CAAE;MACtD,uBAAuB,EAAE;QAAEF,MAAM,EAAEE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC5C;EAEN,CAAC,CAAC,CACE,CACE,eACV;IAAQ,SAAS,EAAC,eAAe;IAAC,OAAO,EAAEf,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAE/C,CACD,CACL;AAEX;AAAC,GAxDQN,GAAG;EAAA,QASNJ,gBAAgB;AAAA;AAAA,KATbI,GAAG;AA0DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}