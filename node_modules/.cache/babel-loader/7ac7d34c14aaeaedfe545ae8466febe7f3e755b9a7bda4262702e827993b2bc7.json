{"ast":null,"code":"var _jsxFileName = \"/Users/christophernaeder/Desktop/Github Repos/quiz/src/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24\n};\nconst API_ENDPOINT = 'https://opentdb.com/api.php?';\nconst url = '';\nconst tempUrl = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: 'sports',\n    difficulty: 'easy'\n  });\n  const fetchQuestions = async url => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch(err => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n  const nextQuestion = () => {\n    setIndex(prev => {\n      const index = prev + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n  const checkAnswer = value => {\n    if (value) {\n      setCorrect(prev => prev + 1);\n    }\n    nextQuestion();\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({\n      ...quiz,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      amount,\n      category,\n      difficulty\n    } = quiz;\n    // const tempUrl =\n    //   'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      waiting,\n      loading,\n      questions,\n      index,\n      correct,\n      error,\n      isModalOpen,\n      nextQuestion,\n      checkAnswer,\n      closeModal,\n      quiz,\n      handleChange,\n      handleSubmit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, children);\n};\n// make sure use\n_s(AppProvider, \"qo/tGIPd6ClWEc++s08r7xwBscA=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["axios","React","useState","useContext","useEffect","table","sports","history","politics","API_ENDPOINT","url","tempUrl","AppContext","createContext","AppProvider","children","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","quiz","setQuiz","amount","category","difficulty","fetchQuestions","response","catch","err","console","log","data","results","length","nextQuestion","prev","openModal","checkAnswer","value","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext"],"sources":["/Users/christophernaeder/Desktop/Github Repos/quiz/src/context.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n};\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?';\n\nconst url = '';\nconst tempUrl =\n  'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: 'sports',\n    difficulty: 'easy',\n  });\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch((err) => console.log(err));\n\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((prev) => {\n      const index = prev + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((prev) => prev + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({\n      ...quiz,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    // const tempUrl =\n    //   'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}